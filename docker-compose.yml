version: '3'

services:
  db:
    image: mysql:5.7
    env_file:
      - .env
    volumes:
      - ./docker/db/config/my.cnf:/etc/mysql/conf.d/arbbot.cnf
      - ./docker/db/seed/01-database.sql:/docker-entrypoint-initdb.d/01-database.sql
      - ./docker/db/seed/data.sql:/docker-entrypoint-initdb.d/data.sql
      - ./docker/db-data:/var/lib/mysql
    networks:
      backend:
    restart: always
  bot:
    depends_on:
      - db
    env_file:
      - .env
    build:
      context: ./docker/bot
      args:
      - uid=${UID:-1000}
      - username=${USER_NAME:-bot}
    volumes:
      - .:/home/${USER_NAME:-bot}
      - ./docker/config:/var/arbbot
    networks:
      - backend
    restart: always
    command: ["/bin/arbbot.sh", "${MYSQL_DATABASE:-arbitrage}", "${MYSQL_ROOT_PASSWORD:-root}"]
  web:
    depends_on:
      - db
      - php
    env_file:
      - .env
    build:
      context: ./docker/web
      args:
      - uid=${UID:-1000}
      - username=${USER_NAME:-bot}
      - http_auth_user=${HTTP_AUTH_USER:-arbb0t}
      - http_auth_password=${HTTP_AUTH_PASSWORD:-arbb0tpass}
    ports:
      - "${HTTP_PORT:-80}:80"
    volumes:
      - ./:/var/www/html
    networks:
      - frontend
    restart: always
  php:
    depends_on:
      - db
    env_file:
      - .env
    build:
      context: ./docker/php
      args:
      - uid=${UID:-1000}
      - username=${USER_NAME:-bot}
    expose:
      - 9000
    restart: always
    volumes:
      - ./:/var/www/html
      - ./docker/config:/var/arbbot
    networks:
      - frontend
      - backend
networks:
  frontend:
  backend:
