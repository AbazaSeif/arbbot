version: '3'

services:
  db:
    image: mysql:5.7
    env_file:
      - .env
    volumes:
      - ./docker/db/config/my.cnf:/etc/mysql/conf.d/arbbot.cnf
      - ./docker/db/seed:/docker-entrypoint-initdb.d
      - ./docker/db-data:/var/lib/mysql
    networks:
      backend:
    restart: always
  bot:
    depends_on:
      - db
    env_file:
      - .env
    build:
      context: ./docker/bot
      args:
      - uid=${UID:-1000}
      - username=${USER:-bot}
    volumes:
      - .:/home/${USER:-bot}
    networks:
      - backend
    command: ["/bin/wait-for-db.sh", "profit_loss", "${MYSQL_DATABASE:-arbitrage}", "${MYSQL_ROOT_PASSWORD:-root}", "/usr/bin/hhvm", "main.php"]
  web:
    depends_on:
      - db
      - php
    env_file:
      - .env
    build:
      context: ./docker/web
      args:
      - uid=${UID:-1000}
      - username=${USER:-bot}
      - http_auth_user=${HTTP_AUTH_USER:-arbb0t}
      - http_auth_password=${HTTP_AUTH_PASSWORD:-arbb0tpass}
    ports:
      - "80:80"
    volumes:
      - ./web:/var/www/html
    networks:
      - frontend
    restart: always
  php:
    depends_on:
      - db
    build:
      context: ./docker/php
      args:
      - uid=${UID:-1000}
      - username=${USER:-root}
      - db=${MYSQL_DATABASE:-arbitrage}
      - db_username=${MYSQL_USER:-arbitrage}
      - db_password=${MYSQL_PASSWORD:-MySqlPassword}
    expose:
      - 9000
    restart: always
    volumes:
      - ./web:/var/www/html
    networks:
      - frontend
      - backend
networks:
  frontend:
  backend:
